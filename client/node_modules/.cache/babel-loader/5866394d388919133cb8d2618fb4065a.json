{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getTodos, addTodo, deleteTodo } from './API';\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(_ref => {\n      let {\n        data: {\n          todos\n        }\n      } = _ref;\n      return setTodos(todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    addTodo(formData).then(_ref2 => {\n      let {\n        status,\n        data\n      } = _ref2;\n\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then;\n  };\n};\n\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getTodos","addTodo","deleteTodo","App","todos","setTodos","fetchTodos","then","data","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","status","Error","handleDeleteTodo","_id"],"sources":["C:/Users/user/Desktop/Projects/TYPESCRIPT PROJECTS/crud-app/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport TodoItem from './components/TodoItem';\nimport AddTodo from './components/AddTodo';\nimport {getTodos, addTodo, upateTodo, deleteTodo } from './API'\n\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\nuseEffect(() => {\n  fetchTodos()\n}, [])\n\nconst fetchTodos = (): void =>{\n  getTodos()\n  .then(({data: {todos }} : ITodo[] | any) => setTodos(todos))\n  .catch((err: Error) => console.log(err))\n}\n\nconst handleSaveTodo = (e:React.FormEvent, formData: ITodo): void => {\n e.preventDefault()\n addTodo(formData)\n .then(({status, data}) => {\n  if(status !==201) {\n    throw new Error('Error! Todo not saved')\n  }\n  setTodos(data.todos)\n })\n .catch((err) => console.log(err))\n}\n\nconst handleDeleteTodo = (_id:string): void =>{\n  deleteTodo(_id)\n  .then\n}\n\n\n}\n"],"mappings":";;AAAA,SAAeA,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAGA,SAAQC,QAAR,EAAkBC,OAAlB,EAAsCC,UAAtC,QAAwD,OAAxD;;AAGA,MAAMC,GAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAU,EAAV,CAAlC;EACFD,SAAS,CAAC,MAAM;IACdQ,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,UAAU,GAAG,MAAW;IAC5BN,QAAQ,GACPO,IADD,CACM;MAAA,IAAC;QAACC,IAAI,EAAE;UAACJ;QAAD;MAAP,CAAD;MAAA,OAAsCC,QAAQ,CAACD,KAAD,CAA9C;IAAA,CADN,EAECK,KAFD,CAEQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFvB;EAGD,CAJD;;EAMA,MAAMG,cAAc,GAAG,CAACC,CAAD,EAAoBC,QAApB,KAA8C;IACpED,CAAC,CAACE,cAAF;IACAf,OAAO,CAACc,QAAD,CAAP,CACCR,IADD,CACM,SAAoB;MAAA,IAAnB;QAACU,MAAD;QAAST;MAAT,CAAmB;;MACzB,IAAGS,MAAM,KAAI,GAAb,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACD;;MACDb,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;IACA,CAND,EAOCK,KAPD,CAOQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;EAQA,CAVD;;EAYA,MAAMS,gBAAgB,GAAIC,GAAD,IAAqB;IAC5ClB,UAAU,CAACkB,GAAD,CAAV,CACCb,IADD;EAED,CAHD;AAMC,CA9BD;;GAAMJ,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}